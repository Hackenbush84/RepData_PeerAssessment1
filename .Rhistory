?dev.copy2pdf
?png
?lines
?boxplot
?lines
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lpoints
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
library(lattice)
library(datasets)
data(airquality)
xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality)
load(ggplot2)
library(ggplot2)
library("ggplot2")
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
install.packages(c("grDevices", "RColorBrewer"))
install.packages(c("grDevices", "RColorBrewer"))
install.packages(c("BH", "jsonlite", "magrittr", "RCurl", "sqldf"))
setwd("C:/Users/DeltaR3J/Desktop/Coursera/ReprRes/RepData_PeerAssessment1")
data <- read.csv("activity.csv", header = TRUE)
dailySteps <- aggregate(data$steps, by = list(data$date), FUN="sum", na.rm=TRUE)
View(data)
tsData <- as.ts(data)
View(data)
dailyStepPattern <- aggregate(data$steps, by = list(data$interval), FUN="mean", na.rm=TRUE)
rm(tsData)
View(dailyStepPattern)
plot(dailyStepPattern$Group.1,dailyStepPattern$x, type = "l")
plot(dailyStepPattern$Group.1,dailyStepPattern$x, type = "l",
xlab = "Time Interval", ylab = "Average # of Steps")
plot(dailyStepPattern$Group.1,dailyStepPattern$x, type = "l",
xlab = "Time Interval", ylab = "Average # of Steps", main = "Mean Steps for
Each Time Interval")
dailyStepPattern[dailyStepPattern$x == max(dailyStepPattern$x),1]
NAs <- data[is.NA(data$steps)]
NAs <- data[is.na(data$steps)]
NAs <- data[is.na(steps)]
NAs <- data[is.na(data$steps)]
NAs <- data[is.na(data$steps),]
View(NAs)
dim(NAs)
nrow(NAs)
impData <- data
impData$steps[which(is.na(impData$steps))] <- dailyStepPattern[dailyStepPattern$Group.1 == impData$interval,x]
impData$steps[which(is.na(impData$steps))] <- dailyStepPattern[(dailyStepPattern$Group.1 == impData$interval),2]
impData <- data
for (i in nrow(impData)){
if (is.na(impData[i,steps])){
impData[i,steps] <- dailyStepPattern[dailyStepPattern$Group.1 == impdata[i,interval],2]
}
}
impData <- data
for (i in nrow(impData)){
if (is.na(impData[i,"steps"])){
impData[i,"steps"] <- dailyStepPattern[dailyStepPattern$Group.1 == impdata[i,"interval"],2]
}
}
for (i in nrow(impData)){
if (is.na(impData[i,"steps"])){
impData[i,"steps"] <- dailyStepPattern[dailyStepPattern$Group.1 == impData[i,"interval"],2]
}
}
View(impData)
impData <- data
for (i in nrow(impData)){
if (is.na(impData[i,"steps"])){
impData[i,"steps"] <- 3
}
}
View(impData)
NAs <- data[is.na(data$steps),]
nrow(NAs)
impData <- data
impData[is.na(impData)] <- 3
View(impData)
impData <- data
impData[is.na(impData),"steps"] <- 2
View(impData)
impData <- data
for (i in nrow(impData)){
if is.na(impData$steps[i]){
interv <- impData[i,interval]
impData$steps[i] <- dailyStepPattern[(dailyStepPattern$Group.1 == interv),"x"]
}
}
impData <- data
for (i in 1:nrow(impData)){
if is.na(impData$steps[i]){
interv <- impData[i,interval]
impData$steps[i] <- dailyStepPattern[(dailyStepPattern$Group.1 == interv),"x"]
}
}
impData <- data
for (i in 1:nrow(impData)){
if is.na(impData$steps[i]){
interv <- impData[i,"interval"]
impData$steps[i] <- dailyStepPattern[(dailyStepPattern$Group.1 == interv),"x"]
}
}
impData <- data
for (i in (1:nrow(impData))){
if is.na(impData$steps[i]){
interv <- impData[i,"interval"]
impData$steps[i] <- dailyStepPattern[(dailyStepPattern$Group.1 == interv),"x"]
}
}
